{"ast":null,"code":"var _jsxFileName = \"/Users/harithapulimi/Documents/projects/sai/sredd005.github.io/src/components/home/ProjectCard.jsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nconst ProjectCard = ({\n  value\n}) => {\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\n  const handleUpdatetime = useCallback(e => {\n    const date = new Date(value.pushed_at);\n    const nowdate = new Date();\n    const diff = nowdate.getTime() - date.getTime();\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n    if (hours < 24) {\n      return setUpdatedAt(`${hours.toString()} hours ago`);\n    } else {\n      const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      const day = date.getDate();\n      const monthIndex = date.getMonth();\n      const year = date.getFullYear();\n      return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\n    }\n  }, [value.pushed_at]);\n  useEffect(() => {\n    handleUpdatetime();\n  }, [handleUpdatetime]);\n  const {\n    name,\n    description,\n    svn_url,\n    stargazers_count,\n    languages_url\n  } = value;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card shadow-lg p-3 mb-5 bg-white rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, description, \" \"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `${svn_url}/archive/master.zip`,\n    className: \"btn btn-outline-secondary mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), \" Clone Project\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: svn_url,\n    target: \" _blank\",\n    className: \"btn btn-outline-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), \" Repo\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Language, {\n    value: languages_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-dark card-link mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }), \" Stars\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, stargazers_count)), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Updated \", updated_at)))));\n};\n\nconst Language = ({\n  value\n}) => {\n  const [data, setData] = useState([]);\n  const handleRequest = useCallback(e => {\n    axios.get(value).then(response => {\n      // handle success\n      // console.log(response.data);\n      return setData(response.data);\n    }).catch(error => {\n      // handle error\n      return console.error(error.message);\n    }).finally(() => {// always executed\n    });\n  }, [value]);\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n  const array = [];\n  let total_count = 0;\n\n  for (let index in data) {\n    array.push(index);\n    total_count += data[index]; // console.log(index, this.state.data[index]);\n  } // console.log(\"array contains \", array, this.state.data[array[0]]);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, \"Languages:\", \" \", array.map(language => /*#__PURE__*/React.createElement(\"p\", {\n    key: language,\n    className: \"badge badge-light card-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, language, \": \", Math.trunc(data[language] / total_count * 1000) / 10, \" %\")));\n};\n\nexport default ProjectCard;","map":{"version":3,"sources":["/Users/harithapulimi/Documents/projects/sai/sredd005.github.io/src/components/home/ProjectCard.jsx"],"names":["React","useState","useEffect","useCallback","axios","ProjectCard","value","updated_at","setUpdatedAt","handleUpdatetime","e","date","Date","pushed_at","nowdate","diff","getTime","hours","Math","trunc","toString","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","name","description","svn_url","stargazers_count","languages_url","Language","data","setData","handleRequest","get","then","response","catch","error","console","message","finally","array","total_count","index","push","map","language"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nconst ProjectCard = ({ value }) => {\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\n\n  const handleUpdatetime = useCallback(\n    (e) => {\n      const date = new Date(value.pushed_at);\n      const nowdate = new Date();\n      const diff = nowdate.getTime() - date.getTime();\n      const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n      if (hours < 24) {\n        return setUpdatedAt(`${hours.toString()} hours ago`);\n      } else {\n        const monthNames = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ];\n        const day = date.getDate();\n        const monthIndex = date.getMonth();\n        const year = date.getFullYear();\n\n        return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\n      }\n    },\n    [value.pushed_at]\n  );\n\n  useEffect(() => {\n    handleUpdatetime();\n  }, [handleUpdatetime]);\n\n  const { name, description, svn_url, stargazers_count, languages_url } = value;\n  return (\n    <div className=\"col-md-6\">\n      <div className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n        {/* <img src=\"\" className=\"card-img-top\" alt=\"...\" /> */}\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{name} </h5>\n          <p className=\"card-text\">{description} </p>\n          <a\n            href={`${svn_url}/archive/master.zip`}\n            className=\"btn btn-outline-secondary mr-3\"\n          >\n            <i className=\"fab fa-github\" /> Clone Project\n          </a>\n          <a\n            href={svn_url}\n            target=\" _blank\"\n            className=\"btn btn-outline-secondary\"\n          >\n            <i className=\"fab fa-github\" /> Repo\n          </a>\n          <hr />\n          <Language value={languages_url}></Language>\n          <p className=\"card-text\">\n            <span className=\"text-dark card-link mr-4\">\n              <i className=\"fab fa-github\" /> Stars{\" \"}\n              <span className=\"badge badge-dark\">{stargazers_count}</span>\n            </span>\n            <small className=\"text-muted\">Updated {updated_at}</small>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Language = ({ value }) => {\n  const [data, setData] = useState([]);\n\n  const handleRequest = useCallback(\n    (e) => {\n      axios\n        .get(value)\n        .then((response) => {\n          // handle success\n          // console.log(response.data);\n          return setData(response.data);\n        })\n        .catch((error) => {\n          // handle error\n          return console.error(error.message);\n        })\n        .finally(() => {\n          // always executed\n        });\n    },\n    [value]\n  );\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  const array = [];\n  let total_count = 0;\n  for (let index in data) {\n    array.push(index);\n    total_count += data[index];\n    // console.log(index, this.state.data[index]);\n  }\n  // console.log(\"array contains \", array, this.state.data[array[0]]);\n\n  return (\n    <div className=\"pb-3\">\n      Languages:{\" \"}\n      {array.map((language) => (\n        <p key={language} className=\"badge badge-light card-link\">\n          {language}: {Math.trunc((data[language] / total_count) * 1000) / 10} %\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default ProjectCard;\n"]},"metadata":{},"sourceType":"module"}