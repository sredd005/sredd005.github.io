{"ast":null,"code":"var _jsxFileName = \"/Users/saireddy/Documents/Projects/sredd005.github.io/src/components/home/MainBody.jsx\";\nimport React, { useState } from \"react\";\nimport Typist from \"react-typist\";\nimport { FirstName, LastName, MiddleName, devDesc, icons } from \"../../editable-stuff/configurations.json\";\n\nconst MainBody = () => {\n  const [hoverstatus, setHoverstatus] = useState(new Array(icons.length).fill(\"socialicons\"));\n\n  const toggleHover = data => {\n    const newhoverStatus = [...hoverstatus];\n\n    if (data.event === \"enter\") {\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\n      return setHoverstatus(newhoverStatus);\n    } else if (data.event === \"leave\") {\n      newhoverStatus[data.icon.id] = \"socialicons\";\n      return setHoverstatus(newhoverStatus);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"home\",\n    className: \"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"stars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container container-fluid text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, FirstName + \" \" + MiddleName + \" \" + LastName), /*#__PURE__*/React.createElement(Typist, {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \" \", devDesc), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, icons.map(icon => /*#__PURE__*/React.createElement(\"a\", {\n    key: icon.id,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: icon.url,\n    \"aria-label\": `My ${icon.image.split(\"-\")[1]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: `fab ${icon.image}  fa-3x ${hoverstatus[icon.id]}`,\n    onMouseOver: () => toggleHover({\n      icon,\n      event: \"enter\"\n    }),\n    onMouseOut: () => toggleHover({\n      icon,\n      event: \"leave\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default MainBody;","map":{"version":3,"sources":["/Users/saireddy/Documents/Projects/sredd005.github.io/src/components/home/MainBody.jsx"],"names":["React","useState","Typist","FirstName","LastName","MiddleName","devDesc","icons","MainBody","hoverstatus","setHoverstatus","Array","length","fill","toggleHover","data","newhoverStatus","event","icon","id","map","url","image","split"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,KALF,QAMO,0CANP;;AAQA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAC5C,IAAIU,KAAJ,CAAUJ,KAAK,CAACK,MAAhB,EAAwBC,IAAxB,CAA6B,aAA7B,CAD4C,CAA9C;;AAIA,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5B,UAAMC,cAAc,GAAG,CAAC,GAAGP,WAAJ,CAAvB;;AAEA,QAAIM,IAAI,CAACE,KAAL,KAAe,OAAnB,EAA4B;AAC1BD,MAAAA,cAAc,CAACD,IAAI,CAACG,IAAL,CAAUC,EAAX,CAAd,GAA+B,kBAA/B;AACA,aAAOT,cAAc,CAACM,cAAD,CAArB;AACD,KAHD,MAGO,IAAID,IAAI,CAACE,KAAL,KAAe,OAAnB,EAA4B;AACjCD,MAAAA,cAAc,CAACD,IAAI,CAACG,IAAL,CAAUC,EAAX,CAAd,GAA+B,aAA/B;AACA,aAAOT,cAAc,CAACM,cAAD,CAArB;AACD;AACF,GAVD;;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,SAAS,EAAC,2IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,SAAS,GAAG,GAAZ,GAAkBE,UAAlB,GAA+B,GAA/B,GAAqCD,QADxC,CADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA2BE,OAA3B,CAJF,eAKE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACa,GAAN,CAAWF,IAAD,iBACT;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,GAAG,EAAC,qBAHN;AAIE,IAAA,IAAI,EAAED,IAAI,CAACG,GAJb;AAKE,kBAAa,MAAKH,IAAI,CAACI,KAAL,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAyB,EAL7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAG,OAAML,IAAI,CAACI,KAAM,WAAUb,WAAW,CAACS,IAAI,CAACC,EAAN,CAAU,EAD9D;AAEE,IAAA,WAAW,EAAE,MAAML,WAAW,CAAC;AAAEI,MAAAA,IAAF;AAAQD,MAAAA,KAAK,EAAE;AAAf,KAAD,CAFhC;AAGE,IAAA,UAAU,EAAE,MAAMH,WAAW,CAAC;AAAEI,MAAAA,IAAF;AAAQD,MAAAA,KAAK,EAAE;AAAf,KAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADD,CADH,CALF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CALF,CADF,CADF;AAwCD,CAzDD;;AA2DA,eAAeT,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Typist from \"react-typist\";\nimport {\n  FirstName,\n  LastName,\n  MiddleName,\n  devDesc,\n  icons,\n} from \"../../editable-stuff/configurations.json\";\n\nconst MainBody = () => {\n  const [hoverstatus, setHoverstatus] = useState(\n    new Array(icons.length).fill(\"socialicons\")\n  );\n\n  const toggleHover = (data) => {\n    const newhoverStatus = [...hoverstatus];\n\n    if (data.event === \"enter\") {\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\n      return setHoverstatus(newhoverStatus);\n    } else if (data.event === \"leave\") {\n      newhoverStatus[data.icon.id] = \"socialicons\";\n      return setHoverstatus(newhoverStatus);\n    }\n  };\n\n  return (\n    <div>\n      <div\n        id=\"home\"\n        className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n      >\n        <div id=\"stars\"></div>\n        <div className=\"container container-fluid text-center \">\n          <h1 className=\"display-1\">\n            {FirstName + \" \" + MiddleName + \" \" + LastName}\n          </h1>\n          <Typist className=\"lead\"> {devDesc}</Typist>\n          <div className=\"p-5\">\n            {icons.map((icon) => (\n              <a\n                key={icon.id}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={icon.url}\n                aria-label={`My ${icon.image.split(\"-\")[1]}`}\n              >\n                <i\n                  className={`fab ${icon.image}  fa-3x ${hoverstatus[icon.id]}`}\n                  onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\n                  onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\n                />\n              </a>\n            ))}\n          </div>\n          <a\n            //className=\"btn btn-outline-light btn-lg\"\n            //href=\"#aboutme\"\n           // role=\"button\"\n           // aria-label=\"More About Me\"\n          >\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainBody;"]},"metadata":{},"sourceType":"module"}